import { Promise } from 'es6-promise';
export declare class Database {
    private databaseUrl;
    private databaseName;
    private customEvent;
    constructor(databaseUrl: string, databaseName: string);
    getUrl(): string;
    createDatabase(): Promise<any>;
    getDatabase(): Promise<any>;
    createDesignDocument(designDocumentName: string, designDocumentViews: any): Promise<{}>;
    getDesignDocument(designDocumentName: string): Promise<{}>;
    queryView(designDocumentName: string, viewName: string, options: any): Promise<any>;
    createDocument(jsonDocument: any): Promise<any>;
    createLocalDocument(documentId: string, jsonDocument: any): Promise<{}>;
    updateDocument(documentId: string, documentRevision: string, jsonDocument: any): Promise<any>;
    deleteDocument(documentId: string, documentRevision: string): Promise<any>;
    getAllDocuments(): Promise<{}>;
    getDocument(documentId: string): Promise<any>;
    getLocalDocument(documentId: string): Promise<{}>;
    replicate(source: string, target: string, continuous: boolean): Promise<any>;
    sync(target: string, continuous: boolean): Promise<any>;
    listen(callback: any): void;
    private poller(cseq);
    getActiveTasks(): Promise<{}>;
    makeRequest(method: string, url: string, params?: any, data?: any, isJson?: boolean, withCredentials?: boolean): Promise<{}>;
    private serializeQueryParameters(params);
}
